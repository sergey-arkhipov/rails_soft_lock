name: Ruby CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published] # Trigger on manual GitHub releases

jobs:
  test:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }} Tests

    strategy:
      matrix:
        ruby:
          - "3.4"
          - "3.3"

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211

    env:
      REDIS_URL: redis://localhost:6379/0
      MEMCACHED_URL: localhost:11211

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Install dependencies
        run: bundle install
      - name: Run rspec
        run: bundle exec rspec
      - name: Run rubocop
        run: bundle exec rubocop
      - name: Run reek
        run: bundle exec reek

  # Publish gem when release
  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write # Required for OIDC
      contents: write # Needed for checkout

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Verify version match
        run: |
          # Extract version from tag (works for both push and release triggers)
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG_VERSION="${{ github.event.release.tag_name }}"
          else
            TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          TAG_VERSION="${TAG_VERSION#v}"  # Remove 'v' prefix if present
          GEM_VERSION=$(ruby -r ./lib/rails_soft_lock/version.rb -e "puts RailsSoftLock::VERSION")

          echo "::group::Version Verification"
          echo "Tag Version: $TAG_VERSION"
          echo "Gem Version: $GEM_VERSION"
          echo "::endgroup::"

          if [ "$TAG_VERSION" != "$GEM_VERSION" ]; then
            echo "::error::Version mismatch! Tag ($TAG_VERSION) â‰  Gem ($GEM_VERSION)"
            exit 1
          fi

      - name: Publish via Trusted Publishing
        uses: rubygems/release-gem@v1
